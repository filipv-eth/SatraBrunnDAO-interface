{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/easing/index.mjs","../node_modules/svelte/transition/index.mjs","../src/DarkmodeToggle.svelte","../src/Hamburger.svelte","../src/Cross.svelte","../src/links.js","../src/Menu.svelte","../node_modules/svelte/store/index.mjs","../src/stores.js","../src/Header.svelte","../src/Links.svelte","../src/Footer.svelte","../src/CollapsibleSection.svelte","../node_modules/svelte-markdown/src/Parser.svelte","../node_modules/marked/lib/marked.esm.js","../node_modules/svelte-markdown/src/context.js","../node_modules/svelte-markdown/src/renderers/Heading.svelte","../node_modules/svelte-markdown/src/renderers/Paragraph.svelte","../node_modules/svelte-markdown/src/renderers/Text.svelte","../node_modules/svelte-markdown/src/renderers/Image.svelte","../node_modules/svelte-markdown/src/renderers/Link.svelte","../node_modules/svelte-markdown/src/renderers/Em.svelte","../node_modules/svelte-markdown/src/renderers/Del.svelte","../node_modules/svelte-markdown/src/renderers/Codespan.svelte","../node_modules/svelte-markdown/src/renderers/Strong.svelte","../node_modules/svelte-markdown/src/renderers/Table.svelte","../node_modules/svelte-markdown/src/renderers/TableHead.svelte","../node_modules/svelte-markdown/src/renderers/TableBody.svelte","../node_modules/svelte-markdown/src/renderers/TableRow.svelte","../node_modules/svelte-markdown/src/renderers/TableCell.svelte","../node_modules/svelte-markdown/src/renderers/List.svelte","../node_modules/svelte-markdown/src/renderers/ListItem.svelte","../node_modules/svelte-markdown/src/renderers/Hr.svelte","../node_modules/svelte-markdown/src/renderers/Html.svelte","../node_modules/svelte-markdown/src/renderers/Blockquote.svelte","../node_modules/svelte-markdown/src/renderers/Code.svelte","../node_modules/svelte-markdown/src/renderers/Br.svelte","../node_modules/svelte-markdown/src/markdown-parser.js","../node_modules/svelte-markdown/src/SvelteMarkdown.svelte","../src/FAQ.svelte","../src/ColorPaletteCircles.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.3' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\n  export let darkMode = false;\n  export let toggle;\n</script>\n\n<svg\n  on:click={toggle}\n  width=\"40\"\n  height=\"40\"\n  viewBox=\"0 0 40 40\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <rect\n    x=\"0.5\"\n    y=\"0.5\"\n    width=\"39\"\n    height=\"39\"\n    rx=\"9.5\"\n    stroke={darkMode ? \"#A3433B\" : \"#343837\"}\n  />\n  {#if darkMode}\n    <!--  Moon -->\n    <path\n      d=\"M29.8534 23.3671C28.9589 23.6382 28.01 23.7839 27.027 23.7839C21.6534 23.7839 17.2973 19.4278 17.2973 14.0542C17.2973 13.0712 17.443 12.1223 17.7141 11.2278C13.719 12.4387 10.8108 16.1501 10.8108 20.5407C10.8108 25.9143 15.1669 30.2704 20.5405 30.2704C24.9311 30.2704 28.6425 27.3622 29.8534 23.3671Z\"\n      stroke=\"#A3433B\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  {:else}\n    <!-- Sun -->\n    <path\n      d=\"M20.173 25.5784C23.1583 25.5784 25.5784 23.1583 25.5784 20.173C25.5784 17.1876 23.1583 14.7676 20.173 14.7676C17.1877 14.7676 14.7676 17.1876 14.7676 20.173C14.7676 23.1583 17.1877 25.5784 20.173 25.5784Z\"\n      stroke=\"#343837\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M19.673 11.5243C19.673 11.8005 19.8968 12.0243 20.173 12.0243C20.4491 12.0243 20.673 11.8005 20.673 11.5243H19.673ZM20.673 9.36215C20.673 9.08601 20.4491 8.86215 20.173 8.86215C19.8968 8.86215 19.673 9.08601 19.673 9.36215H20.673ZM20.673 28.8216C20.673 28.5455 20.4491 28.3216 20.173 28.3216C19.8968 28.3216 19.673 28.5455 19.673 28.8216H20.673ZM19.673 30.9838C19.673 31.2599 19.8968 31.4838 20.173 31.4838C20.4491 31.4838 20.673 31.2599 20.673 30.9838H19.673ZM20.673 11.5243V9.36215H19.673V11.5243H20.673ZM19.673 28.8216V30.9838H20.673V28.8216H19.673Z\"\n      fill=\"#343837\"\n    />\n    <path\n      d=\"M13.7807 14.4878C13.976 14.6831 14.2926 14.6831 14.4878 14.4878C14.6831 14.2926 14.6831 13.976 14.4878 13.7807L13.7807 14.4878ZM12.959 12.2518C12.7637 12.0566 12.4471 12.0566 12.2519 12.2518C12.0566 12.4471 12.0566 12.7637 12.2519 12.959L12.959 12.2518ZM26.7189 26.0118C26.5236 25.8165 26.207 25.8165 26.0118 26.0118C25.8165 26.207 25.8165 26.5236 26.0118 26.7189L26.7189 26.0118ZM27.5407 28.2478C27.7359 28.443 28.0525 28.443 28.2478 28.2478C28.443 28.0525 28.443 27.7359 28.2478 27.5406L27.5407 28.2478ZM14.4878 13.7807L12.959 12.2518L12.2519 12.959L13.7807 14.4878L14.4878 13.7807ZM26.0118 26.7189L27.5407 28.2478L28.2478 27.5406L26.7189 26.0118L26.0118 26.7189Z\"\n      fill=\"#343837\"\n    />\n    <path\n      d=\"M11.5243 20.673C11.8005 20.673 12.0243 20.4491 12.0243 20.173C12.0243 19.8968 11.8005 19.673 11.5243 19.673V20.673ZM9.36218 19.673C9.08604 19.673 8.86218 19.8968 8.86218 20.173C8.86218 20.4491 9.08604 20.673 9.36218 20.673V19.673ZM28.8216 19.673C28.5455 19.673 28.3216 19.8968 28.3216 20.173C28.3216 20.4491 28.5455 20.673 28.8216 20.673V19.673ZM30.9838 20.673C31.2599 20.673 31.4838 20.4491 31.4838 20.173C31.4838 19.8968 31.2599 19.673 30.9838 19.673V20.673ZM11.5243 19.673H9.36218V20.673H11.5243V19.673ZM28.8216 20.673H30.9838V19.673H28.8216V20.673Z\"\n      fill=\"#343837\"\n    />\n    <path\n      d=\"M26.0117 13.7807C25.8164 13.976 25.8164 14.2926 26.0117 14.4878C26.207 14.6831 26.5236 14.6831 26.7188 14.4878L26.0117 13.7807ZM28.2477 12.959C28.443 12.7637 28.443 12.4471 28.2477 12.2518C28.0524 12.0566 27.7359 12.0566 27.5406 12.2518L28.2477 12.959ZM14.4878 26.7189C14.683 26.5236 14.683 26.207 14.4878 26.0118C14.2925 25.8165 13.9759 25.8165 13.7807 26.0118L14.4878 26.7189ZM12.2518 27.5406C12.0565 27.7359 12.0565 28.0525 12.2518 28.2478C12.4471 28.443 12.7636 28.443 12.9589 28.2478L12.2518 27.5406ZM26.7188 14.4878L28.2477 12.959L27.5406 12.2518L26.0117 13.7807L26.7188 14.4878ZM13.7807 26.0118L12.2518 27.5406L12.9589 28.2478L14.4878 26.7189L13.7807 26.0118Z\"\n      fill=\"#343837\"\n    />\n  {/if}\n</svg>\n\n<style>\n  svg {\n    margin-right: 1rem;\n  }\n\n  @media (max-width: 640px) {\n    svg {\n      margin-left: auto;\n    }\n  }\n</style>\n","<script>\n  export let click;\n</script>\n\n<svg\n  on:click={click}\n  viewBox=\"0 0 40 40\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <rect x=\"1\" y=\"1\" width=\"38\" height=\"38\" rx=\"9\" stroke-width=\"2\" />\n  <path\n    d=\"M10 13H30\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n  <path\n    d=\"M10 20H30\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n  <path\n    d=\"M10 27H30\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n</svg>\n\n<style>\n  svg {\n    height: 40px;\n    width: 40px;\n    stroke: var(--light-body);\n    margin-left: auto;\n    margin-right: 0.5rem;\n  }\n  :global(body.dark-mode) svg {\n    stroke: var(--dark-red);\n  }\n\n  @media (min-width: 640px) {\n    svg {\n      display: none;\n    }\n  }\n</style>\n","<svg\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M21 21L3 3\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n  <path\n    d=\"M21.0001 3L3 21.0001\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n</svg>\n\n<style>\n  svg {\n    stroke: var(--light-body);\n  }\n  :global(body.dark-mode) svg {\n    stroke: var(--dark-red);\n  }\n</style>\n","export const links = [\n  {\n    url: \"https://juicebox.money/#/p/satrabrunndao\",\n    label: \"juicebox\",\n  },\n  {\n    url: \"https://twitter.com/SatraBrunn\",\n    label: \"twitter\",\n  },\n  {\n    url: \"https://discord.gg/aDZJNKtuY4\",\n    label: \"discord\",\n  },\n  {\n    url:\n      \"https://satrabrunn.notion.site/S-tra-Brunn-DAO-Notion-2ecbecf19ac3455a83ef6b6206e193bc\",\n    label: \"notion\",\n  },\n  {\n    url: \"https://github.com/filipv-eth/SatraBrunnDAO-interface\",\n    label: \"github\",\n  },\n];\n","<script>\n  export let darkMode;\n  import Hamburger from \"./Hamburger.svelte\";\n  import Cross from \"./Cross.svelte\";\n  import { links } from \"./links.js\";\n\n  let open = false;\n\n  function toggle() {\n    open = !open;\n  }\n</script>\n\n<!-- TODO definitely needs a cleanup, not refactoring for now as it's\nlikely to change -->\n\n<!-- Links for screens > 640px -->\n<nav class=\"large\" class:darkMode>\n  {#each links.slice(0, -1) as link}\n    <a href={link.url}>{link.label}</a>\n  {/each}\n</nav>\n\n<!-- Hamburger and menu for screens <640px -->\n<Hamburger click={toggle} />\n<div class=\"overlay\" class:darkMode class:hidden={!open}>\n  <div class=\"menu-icon\" on:click={toggle}>\n    <Cross />\n  </div>\n  <nav class:darkMode class=\"small\">\n    {#each links.slice(0, -1) as link}\n      <a href={link.url}>{link.label}</a>\n    {/each}\n  </nav>\n</div>\n\n<style>\n  nav {\n    display: flex;\n    font-size: 24px;\n    justify-content: space-around;\n    width: 50%;\n  }\n\n  nav a {\n    color: #343837;\n    font-family: \"Red Hat Display\", sans-serif;\n    font-weight: 300;\n  }\n  nav.darkMode a {\n    color: var(--dark-body);\n  }\n\n  .hidden {\n    display: none !important;\n  }\n  .overlay {\n    position: fixed;\n    overflow: none;\n    top: 0;\n    height: 100%;\n    width: 100vw;\n    background: linear-gradient(\n        0.47deg,\n        rgba(0, 136, 255, 0.2) 0.39%,\n        rgba(220, 230, 239, 0.2) 99.58%\n      ),\n      linear-gradient(0deg, #dce6ef, #dce6ef);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .overlay.darkMode {\n    background: linear-gradient(\n        0.47deg,\n        rgba(0, 136, 255, 0.2) 0.39%,\n        rgba(220, 230, 239, 0.138) 99.58%\n      ),\n      linear-gradient(0deg, #000, #000);\n  }\n\n  .small {\n    flex-direction: column;\n    text-align: center;\n    height: 30%;\n  }\n\n  @media (min-width: 640px) and (max-width: 850px) {\n    nav {\n      font-size: 18px;\n    }\n  }\n\n  @media (max-width: 640px) {\n    nav.large {\n      display: none;\n    }\n\n    .menu-icon {\n      display: unset;\n    }\n\n    .overlay .menu-icon {\n      position: absolute;\n      top: 60px;\n      right: 50px;\n    }\n  }\n</style>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\n\nexport const darkMode = writable(false);\n\nexport function toggleDarkMode() {\n    window.document.body.classList.toggle(\"dark-mode\");\n    darkMode.update(current => !current);\n}","<script>\n  import { fade } from \"svelte/transition\";\n  import DarkmodeToggle from \"./DarkmodeToggle.svelte\";\n  import Menu from \"./Menu.svelte\";\n\n  import { darkMode as darkModeStore, toggleDarkMode } from \"./stores.js\";\n\n  let darkMode;\n  darkModeStore.subscribe((value) => {\n    darkMode = value;\n  });\n</script>\n\n<header>\n  <img\n    src={darkMode ? \"darkLogo.png\" : \"lightLogo.png\"}\n    alt=\"logo\"\n    on:click={toggleDarkMode}\n  />\n  <h1>Sätra Brunn DAO</h1>\n  <Menu {darkMode} />\n  <DarkmodeToggle {darkMode} toggle={toggleDarkMode} />\n</header>\n\n<style>\n  header {\n    display: flex;\n    align-items: center;\n  }\n  img {\n    margin: 1rem;\n    height: 125px;\n    width: 125px;\n    transition: 2s all;\n  }\n\n  @media (max-width: 640px) {\n    h1 {\n      font-size: 1.6rem;\n    }\n    img {\n      margin: unset;\n      height: 100px;\n      width: 100px;\n    }\n    header:last-child {\n      margin-left: auto;\n    }\n  }\n</style>\n","<script>\n  import { links } from \"./links.js\";\n</script>\n\n{#each links as link}\n  <a href={link.url}>{link.label}</a>\n{/each}\n\n<style>\n  a {\n    color: var(--grayish-orange);\n    font-weight: 700;\n    font-size: 1.5rem;\n  }\n\n  @media (max-width: 640px) {\n    a {\n      font-size: 1rem;\n    }\n  }\n</style>\n","<script>\n  import Links from \"./Links.svelte\";\n</script>\n\n<footer>\n  <nav>\n    <Links />\n  </nav>\n</footer>\n\n<style>\n  nav {\n    z-index: 999;\n    width: 100vw;\n    max-width: 1200px;\n    margin-left: 0 auto;\n\n    display: flex;\n    justify-content: space-around;\n  }\n\n  footer {\n    position: absolute;\n    bottom: 20px;\n  }\n</style>\n","<script>\n  // based on suggestions from:\n  // Inclusive Components by Heydon Pickering https://inclusive-components.design/collapsible-sections/\n  export let color;\n  export let headerText;\n\n  let expanded = false;\n</script>\n\n<!-- NOTE: ugly transform below is to silence console error of setting transform to false -->\n\n<div class=\"collapsible\">\n  <h3>\n    <button aria-expanded={expanded} on:click={() => (expanded = !expanded)}\n      ><svg\n        class=\"arrow\"\n        width=\"21\"\n        height=\"16\"\n        viewBox=\"0 0 21 16\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M20.7071 8.70711C21.0976 8.31658 21.0976 7.68342 20.7071 7.29289L14.3431 0.928932C13.9526 0.538408 13.3195 0.538408 12.9289 0.928932C12.5384 1.31946 12.5384 1.95262 12.9289 2.34315L18.5858 8L12.9289 13.6569C12.5384 14.0474 12.5384 14.6805 12.9289 15.0711C13.3195 15.4616 13.9526 15.4616 14.3431 15.0711L20.7071 8.70711ZM0 9L20 9V7L0 7L0 9Z\"\n        />\n      </svg>\n      <h2>{headerText}</h2>\n\n      <svg\n        class=\"circle\"\n        viewbox=\"0 0 100 100\"\n        stroke=\"#343837\"\n        stroke-width=\"3px\"\n        ><circle cx=\"50\" cy=\"50\" r=\"48\" fill={`var(${color})`} /></svg\n      >\n    </button>\n  </h3>\n\n  {#if expanded}\n    <slot />\n  {/if}\n</div>\n\n<style>\n  h2 {\n    font-weight: 400;\n    font-style: italic;\n    font-family: \"Red Hat Display\", sans-serif;\n    margin-left: 1rem;\n  }\n\n  h3 {\n    margin: 0;\n  }\n\n  button {\n    background-color: unset;\n    border: none;\n    border-bottom: 1px solid var(--light-body);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    margin: 0;\n  }\n\n  :global(body.dark-mode) button {\n    border-bottom: 1px solid var(--dark-body);\n  }\n\n  .circle {\n    height: 1.5rem;\n    width: 1.5rem;\n    stroke: var(--light-body);\n  }\n\n  .arrow {\n    fill: var(--light-body);\n  }\n\n  :global(body.dark-mode) .circle {\n    stroke: var(--dark-body);\n  }\n\n  :global(body.dark-mode) .arrow {\n    fill: var(--dark-body);\n  }\n\n  button[aria-expanded=\"true\"] svg {\n    transform: rotate(90deg);\n  }\n\n  svg:last-of-type {\n    margin-left: auto;\n  }\n</style>\n","<script>\n  export let type = undefined\n  export let tokens = undefined\n  export let header = undefined\n  export let rows = undefined\n  export let ordered = false\n  export let renderers\n</script>\n\n{#if !type}\n  {#each tokens as token}\n    <svelte:self {...token} {renderers} />\n  {/each}\n{:else}\n  {#if renderers[type]}\n    {#if type === 'table'}\n      <svelte:component this={renderers.table}>\n        <svelte:component this={renderers.tablehead}>\n          <svelte:component this={renderers.tablerow}>\n            {#each header as headerItem, i}\n              <svelte:component\n                this={renderers.tablecell}\n                header={true}\n                align={$$restProps.align[i] || 'center'}\n                >\n                <svelte:self tokens={headerItem.tokens} {renderers} />\n              </svelte:component>\n            {/each}\n          </svelte:component>\n        </svelte:component>\n        <svelte:component this={renderers.tablebody}>\n          {#each rows as row}\n            <svelte:component this={renderers.tablerow}>\n              {#each row as cells, i}\n                <svelte:component\n                  this={renderers.tablecell}\n                  header={false}\n                  align={$$restProps.align[i] || 'center'}\n                  >\n                  <svelte:self tokens={cells.tokens} {renderers} />\n                </svelte:component>\n              {/each}\n            </svelte:component>\n          {/each}\n        </svelte:component>\n      </svelte:component>\n    {:else if type === 'list'}\n      {#if ordered}\n        <svelte:component this={renderers.list} {ordered} {...$$restProps}>\n          {#each $$restProps.items as item}\n            <svelte:component this={renderers.orderedlistitem || renderers.listitem} {...item}>\n              <svelte:self tokens={item.tokens} {renderers} />\n            </svelte:component>\n          {/each}\n        </svelte:component>\n      {:else}\n        <svelte:component this={renderers.list} {ordered} {...$$restProps}>\n          {#each $$restProps.items as item}\n            <svelte:component this={renderers.unorderedlistitem || renderers.listitem} {...item}>\n              <svelte:self tokens={item.tokens} {renderers} />\n            </svelte:component>\n          {/each}\n        </svelte:component>\n      {/if}\n    {:else}\n      <svelte:component this={renderers[type]} {...$$restProps}>\n        {#if tokens}\n          <svelte:self {tokens} {renderers} />\n        {:else}\n          {$$restProps.raw}\n        {/if}\n      </svelte:component>\n    {/if}\n  {/if}\n{/if}\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (!cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text, [])\n    };\n    lexer.state.inLink = false;\n    return token;\n  } else {\n    return {\n      type: 'image',\n      raw,\n      href,\n      title,\n      text: escape(text)\n    };\n  }\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text: text,\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *> ?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?: [^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw: raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n        const hasMultipleLineBreaks = spacers.every(t => {\n          const chars = t.raw.split('');\n          let lineBreaks = 0;\n          for (const char of chars) {\n            if (char === '\\n') {\n              lineBreaks += 1;\n            }\n            if (lineBreaks > 1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n          // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        token.type = 'paragraph';\n        token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.tokens = [];\n        this.lexer.inline(token.text, token.tokens);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = [];\n          this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = [];\n            this.lexer.inlineTokens(row[k].text, row[k].tokens);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const token = {\n        type: 'paragraph',\n        raw: cap[0],\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      const token = {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = src.slice(1, lLength + match.index + rLength);\n          return {\n            type: 'em',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = src.slice(2, lLength + match.index + rLength - 1);\n        return {\n          type: 'strong',\n          raw: src.slice(0, lLength + match.index + rLength + 1),\n          text,\n          tokens: this.lexer.inlineTokens(text, [])\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2], [])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)( [^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //        () Skip orphan delim inside strong    (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\ninline.escapedEmSt = /\\\\\\*|\\\\_/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/^ +$/gm, '');\n    }\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens) {\n    this.inlineQueue.push({ src, tokens });\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  }\n\n  html(html) {\n    return html;\n  }\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  }\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  }\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  }\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  }\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  }\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} options\n   * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const opts = merge({}, ...args);\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n  let hasExtensions;\n\n  args.forEach((pack) => {\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      hasExtensions = true;\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        pack.walkTokens.call(this, token);\n        if (walkTokens) {\n          walkTokens.call(this, token);\n        }\n      };\n    }\n\n    if (hasExtensions) {\n      opts.extensions = extensions;\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  for (const token of tokens) {\n    callback.call(marked, token);\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          marked.walkTokens(cell.tokens, callback);\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            marked.walkTokens(cell.tokens, callback);\n          }\n        }\n        break;\n      }\n      case 'list': {\n        marked.walkTokens(token.items, callback);\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            marked.walkTokens(token[childTokens], callback);\n          });\n        } else if (token.tokens) {\n          marked.walkTokens(token.tokens, callback);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Parse Inline\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","export const key = {}\n","<script>\n  import { getContext } from 'svelte'\n  import { key } from '../context'\n  export let depth\n  export let raw\n  export let text\n\n  const { slug, getOptions } = getContext(key)\n  const options = getOptions()\n\n  $: id = options.headerIds\n    ? options.headerPrefix + slug(text)\n    : undefined\n</script>\n\n{#if depth === 1}\n  <h1 {id}><slot></slot></h1>\n{:else if depth === 2}\n  <h2 {id}><slot></slot></h2>\n{:else if depth === 3}\n  <h3 {id}><slot></slot></h3>\n{:else if depth === 4}\n  <h4 {id}><slot></slot></h4>\n{:else if depth === 5}\n  <h5 {id}><slot></slot></h5>\n{:else if depth === 6}\n  <h6 {id}><slot></slot></h6>\n{:else}\n  {raw}\n{/if}\n","<p><slot></slot></p>\n","<script>\n    export let text; text;\n    export let raw; raw;\n</script>\n<slot />\n","<script>\n  export let href = ''\n  export let title = undefined\n  export let text = ''\n</script>\n\n<img src={href} {title} alt={text}>\n","<script>\n  export let href = ''\n  export let title = undefined\n</script>\n\n<a {href} {title}><slot></slot></a>\n","<em><slot></slot></em>\n","<del><slot></slot></del>\n","<script>\n  export let raw\n</script>\n\n<code>{raw.replace(/`/g, '')}</code>\n","<strong><slot></slot></strong>\n","<table><slot></slot></table>\n","<thead><slot></slot></thead>\n","<tbody><slot></slot></tbody>\n","<tr><slot></slot></tr>\n","<script>\n  export let header\n  export let align\n</script>\n\n{#if header}\n  <th {align}><slot></slot></th>\n{:else}\n  <td {align}><slot></slot></td>\n{/if}\n","<script>\n  export let ordered\n  export let start\n</script>\n\n{#if ordered}\n  <ol {start}><slot></slot></ol>\n{:else}\n  <ul><slot></slot></ul>\n{/if}\n","<li><slot></slot></li>\n","<hr>\n","<script>\n  export let text\n</script>\n\n{@html text}\n","<blockquote><slot></slot></blockquote>\n","<script>\n  export let lang\n  export let text\n</script>\n\n<pre class={lang}><code>{text}</code></pre>\n","<br /><slot />\n","export { Lexer, Slugger } from 'marked'\n\nimport {\n  Heading,\n  Paragraph,\n  Text,\n  Image,\n  Link,\n  Em,\n  Strong,\n  Codespan,\n  Del,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  List,\n  ListItem,\n  Hr,\n  Html,\n  Blockquote,\n  Code,\n  Br,\n} from './renderers'\n\nexport const defaultRenderers = {\n  heading: Heading,\n  paragraph: Paragraph,\n  text: Text,\n  image: Image,\n  link: Link,\n  em: Em,\n  strong: Strong,\n  codespan: Codespan,\n  del: Del,\n  table: Table,\n  tablehead: TableHead,\n  tablebody: TableBody,\n  tablerow: TableRow,\n  tablecell: TableCell,\n  list: List,\n  orderedlistitem: null,\n  unorderedlistitem: null,\n  listitem: ListItem,\n  hr: Hr,\n  html: Html,\n  blockquote: Blockquote,\n  code: Code,\n  br: Br,\n}\nexport const defaultOptions = {\n  baseUrl: null,\n  breaks: false,\n  gfm: true,\n  headerIds: true,\n  headerPrefix: '',\n  highlight: null,\n  langPrefix: 'language-',\n  mangle: true,\n  pedantic: false,\n  renderer: null,\n  sanitize: false,\n  sanitizer: null,\n  silent: false,\n  smartLists: false,\n  smartypants: false,\n  tokenizer: null,\n  xhtml: false,\n}\n","<script>\n  import { setContext, createEventDispatcher, onMount } from 'svelte'\n  import Parser from './Parser.svelte'\n  import { Lexer, Slugger, defaultOptions, defaultRenderers } from './markdown-parser'\n  import { key } from './context'\n\n  export let source = ''\n  export let renderers = {}\n  export let options = {}\n  export let isInline = false\n\n  const dispatch = createEventDispatcher();\n\n  let tokens;\n  let lexer;\n  let mounted;\n\n  $: slugger = source ? new Slugger : undefined\n  $: combinedOptions = { ...defaultOptions, ...options }\n  $: {\n    lexer = new Lexer(combinedOptions)\n\n    tokens = isInline ? lexer.inlineTokens(source) : lexer.lex(source)\n\n    dispatch('parsed', { tokens })\n  }\n\n  $: combinedRenderers = { ...defaultRenderers, ...renderers }\n\n  setContext(key, {\n    slug: (val) => slugger ? slugger.slug(val) : '',\n    getOptions: () => combinedOptions\n  })\n  $: mounted && dispatch('parsed', { tokens })\n\n  onMount(() => {\n    mounted = true\n  });\n</script>\n\n<Parser {tokens} renderers={combinedRenderers} />\n","<script>\n  import CollapsibleSection from \"./CollapsibleSection.svelte\";\n  import SvelteMarkdown from \"svelte-markdown\";\n\n  import { slide } from \"svelte/transition\";\n\n  let questions = [\n    {\n      q: \"Why Sätra Brunn?\",\n      // a: `Sätra Brunn has the potential to become a major hub for the European web3 community. With rapidly increasing demand for in-person web3 meeting spaces, infrastructure like Sätra Brunn’s is quickly becoming vital to the ecosystem. The village not only hosts over 3,600 attendees at conferences each year, but features 70 buildings including a fully operational beverage production company, a bathhouse and spa, and numerous lodging options. <br><br> Sätra Brunn is not just one of the preeminent wellness destinations in Europe — it is a loving community with 320 years of history behind it, with the potential to play a major role in the web3 revolution.`,\n      a: `Sätra Brunn has the potential to become a major hub for the European web3 community. With rapidly increasing demand for in-person web3 meeting spaces, infrastructure like Sätra Brunn’s is quickly becoming vital to the ecosystem. The village not only hosts over 3,600 attendees at conferences each year, but features 70 buildings including a fully operational beverage production company, a bathhouse and spa, and numerous lodging options.`,\n      c: \"--grayish-blue\",\n    },\n    {\n      q: \"How is Sätra Brunn DAO raising money?\",\n      a: `Sätra Brunn DAO is using [Juicebox](https://juicebox.money/#/), a powerful and lightweight programmable treasury that allows contributors to donate ETH in exchange for tokens. These tokens can then be used to vote within the DAO, meaning that governance power rests in the hands of those who donate their resources, time, and effort to the DAO.`,\n      c: \"--blue\",\n    },\n    {\n      q: \"How can I participate?\",\n      a: `To donate and receive governance tokens, head to our [Juicebox Project](https://juicebox.money/#/p/satrabrunndao) on [juicebox.money](https://juicebox.money/#/)! If you would like to become a contributor, take a look at [How to Get Started](https://www.notion.so/How-to-Get-Started-f8169ff245c9443bb87bd9ed86155975) on the [Sätra Brunn DAO Notion](https://www.notion.so/S-tra-Brunn-DAO-Notion-2ecbecf19ac3455a83ef6b6206e193bc).`,\n      c: \"--brown\",\n    },\n    {\n      q: \"What is a DAO?\",\n      a: `DAO stands for decentralized autonomous organization. A DAO is an entity with no central leadership and little or no hierarchical management, where proposals are instead made by individual contributors and voted on within the community. A DAO is represented by a program called a *smart contract* which defines the rules with which the DAO operates. The financial records and smart contract for a DAO are both typically stored on a blockchain.`,\n      c: \"--red\",\n    },\n    {\n      q: \"Is there a roadmap?\",\n      a: `Sätra Brunn DAO is focused on the long term sustainability of this project—our primary goal is to preserve the history and legacy of Sätra Brunn, and to solidify Sätra Brunn as a venue for the future of art and technology.\n<br><br>\nCurrently, the team is focused on fundraising and exposure for the project. Longer term, we are focused on preparing for the transition in ownership, growing our team of builders and contributors, and preserving Sätra Brunn’s community and values.`,\n      c: \"--grayish-orange\",\n    },\n    {\n      q: \"Where can I learn more?\",\n      a: `To learn more, you can take a look at our [Notion](https://www.notion.so/S-tra-Brunn-DAO-Notion-2ecbecf19ac3455a83ef6b6206e193bc), follow us on [Twitter](https://twitter.com/SatraBrunn), and join the discussion in our [Discord server](http://discord.gg/ZMtXgYrm5N)!`,\n      c: \"--black\",\n    },\n  ];\n</script>\n\n<section>\n  {#each questions as question}\n    <CollapsibleSection headerText={question.q} color={question.c}>\n      <p transition:slide>\n        {#if question.a}\n          <SvelteMarkdown source={question.a} isInline />\n        {:else}\n          <i transition:slide>Info coming soon.</i>\n        {/if}\n      </p>\n    </CollapsibleSection>\n  {/each}\n</section>\n\n<style>\n  section {\n    max-width: 900px;\n    margin: 0 auto;\n    margin-top: 3rem;\n    margin-bottom: 3rem;\n  }\n\n  p {\n    font-size: large;\n    padding: 1rem;\n  }\n</style>\n","<script>\n  export let colors = [\n    \"--dark-red\",\n    \"--red\",\n    \"--blue\",\n    \"--grayish-blue\",\n    \"--light-gray\",\n    \"--gray\",\n    \"--grayish-orange\",\n    \"--brown\",\n    \"--black\",\n    \"--blackish\",\n  ];\n</script>\n\n<svg viewbox={`0 0 ${colors.length * 2} 2`}>\n  {#each colors as color, index}\n    <circle\n      class=\"circle\"\n      cx={index * 2 + 1}\n      cy={1}\n      r=\"0.9\"\n      fill={`var(${color})`}\n      stroke-width=\"0.05\"\n    />\n  {/each}\n</svg>\n\n<style>\n  svg {\n    width: 250px;\n  }\n  circle {\n    stroke: var(--light-body);\n  }\n\n  :global(body.dark-mode) circle {\n    stroke: var(--dark-body);\n  }\n</style>\n","<script>\n  import Header from \"./Header.svelte\";\n  import Footer from \"./Footer.svelte\";\n  import FAQ from \"./FAQ.svelte\";\n\n  import ColorPaletteCircles from \"./ColorPaletteCircles.svelte\";\n</script>\n\n<Header />\n<main>\n  <section id=\"main-description\">\n    <article>\n      <ColorPaletteCircles />\n      <p>\n        <b>Sätra Brunn</b> is a 144 acre wellness destination in the suburbs of Stockholm,\n        Sweden, renowned for its healing spring water and picturesque scenery.\n      </p>\n      <hr />\n      <p>\n        Sätra Brunn DAO plans to buy Sätra Brunn at auction to establish the\n        first-ever real world <b>DAO-governed municipality.</b>\n      </p>\n    </article>\n    <img id=\"map\" src=\"map.png\" alt=\"map\" />\n  </section>\n  <FAQ />\n</main>\n<Footer />\n\n<style>\n  :global(body) {\n    color: var(--light-body);\n    background-image: url(\"footer-hills.svg\"),\n      linear-gradient(\n        0.47deg,\n        rgba(0, 136, 255, 0.2) 0.39%,\n        rgba(220, 230, 239, 0.2) 99.58%\n      ),\n      linear-gradient(0deg, #dce6ef, #dce6ef);\n    background-position: bottom;\n    background-repeat: repeat-x;\n    background-size: 801px;\n  }\n\n  :global(body.dark-mode) {\n    color: var(--dark-body);\n    background-image: url(\"footer-hills.svg\"),\n      linear-gradient(\n        0.47deg,\n        rgba(0, 136, 255, 0.2) 0.39%,\n        rgba(220, 230, 239, 0.138) 99.58%\n      ),\n      linear-gradient(0deg, #000, #000);\n    background-position: bottom;\n    background-repeat: repeat-x;\n    background-size: 801px;\n  }\n\n  #main-description {\n    padding-left: 4rem;\n    padding-right: 4rem;\n    display: flex;\n    justify-content: space-around;\n  }\n\n  article {\n    width: 50%;\n  }\n\n  main {\n    margin-bottom: 4rem;\n  }\n\n  img {\n    width: 300px;\n  }\n  p {\n    font-size: x-large;\n  }\n\n  hr {\n    border: 1px solid #343837;\n  }\n\n  #map {\n    height: 300px;\n  }\n\n  @media (max-width: 640px) {\n    :global(html) {\n      background-size: 680px;\n    }\n\n    :global(body) {\n      overflow: scroll;\n    }\n\n    article {\n      width: unset;\n    }\n\n    p {\n      font-size: large;\n    }\n    #main-description {\n      max-width: none;\n      flex-direction: column;\n      padding-left: 2rem;\n      padding-right: 2rem;\n    }\n\n    #map {\n      display: none;\n      /* margin: 0 auto;\n      width: 175px;\n      height: 175px; */\n    }\n  }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","compute_rest_props","props","keys","rest","Set","has","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","run_tasks","task","c","delete","f","size","append","target","node","appendChild","get_root_for_style","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","name","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","toggle_class","toggle","classList","custom_event","type","detail","bubbles","e","createEvent","initCustomEvent","HtmlTag","constructor","this","n","html","h","m","nodeName","t","innerHTML","Array","from","childNodes","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","rule","str","hash","charCodeAt","doc","add","stylesheet","__svelte_stylesheet","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","promise","flushidx","flush","saved_component","update","$$","pop","callback","fragment","before_update","after_update","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","easing","tick","css","fulfill","loop","then","get_spread_update","levels","updates","to_null_out","accounted_for","key","get_spread_object","spread_props","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","hydrate","nodes","children","l","SvelteComponent","$destroy","$on","index","splice","$set","$$props","obj","$$set","cubicOut","slide","getComputedStyle","opacity","height","parseFloat","padding_top","paddingTop","padding_bottom","paddingBottom","margin_top","marginTop","margin_bottom","marginBottom","border_top_width","borderTopWidth","border_bottom_width","borderBottomWidth","min","darkMode","click","links","label","open","subscriber_queue","stop","subscribers","set","new_value","run_queue","subscriber","subscribe","invalidate","writable","toggleDarkMode","body","current","darkModeStore","color","headerText","expanded","table","raw","list","tokens","unorderedlistitem","listitem","items","orderedlistitem","tablecell","align","tablerow","tablehead","tablebody","header","rows","ordered","renderers","result","defaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","encode","test","replace","caret","edit","regex","opt","source","val","getRegex","RegExp","noopTest","exec","merge","arguments","prototype","hasOwnProperty","call","splitCells","tableRow","count","cells","match","offset","escaped","curr","trim","shift","rtrim","invert","suffLen","currChar","charAt","substr","repeatString","pattern","outputLink","cap","link","lexer","title","state","inLink","token","inlineTokens","Tokenizer","rules","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","matchIndentInNode","indentInNode","indentCodeCompensation","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","loose","itemRegex","substring","trimLeft","search","nextBulletRegex","checked","trimRight","top","spacers","hasMultipleLineBreaks","every","chars","lineBreaks","char","pre","def","tag","toLowerCase","item","j","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","level","findClosingBracket","linkLen","_escapes","reflink","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","inlineQueue","static","lex","lastToken","cutSrc","lastParagraphClipped","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","console","error","keepPrevChar","includes","lastIndexOf","startInline","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","slug","occurenceAccumulator","dryrun","getOptions","get","getContext","id","defaultRenderers","image","defaultOptions","isInline","createEventDispatcher","mounted","setContext","slugger","combinedOptions","combinedRenderers","q","colors"],"mappings":"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"}